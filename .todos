- Optional extra buttons for the global placeholder state (reset, import, export)
- Static replacement on a per placeholder basis
- Implement proper exception handling for TypeScript code to recover from / compartmentalize non-critical errors.
- Formatters (such as for bash-shell) for escaping characters that may break the command that a placeholder is part of
- Advanced placeholders (placeholders for not often used/very technical fields) whose visibility can be toggled in auto tables
    - Or even more powerful: Categories that can be toggled individually
- new validators: number, linux username
- Better styling for mkdocs material
- per page options (like disabling the insertion of an placeholder input table at the top)
    - maybe only insert if no table is already defined on the page
- idea: debug option / style that shows which placeholder changes will require a page reload
- idea: add number of placeholders to title of table
- Improve behavior on really large pages (as created by print-page plugin)
    - segment tables and only let them run in their own segment -> do now show a hunch of unnecessary placeholders that are referenced way farther down the site
- performance: add options to disable specific replace methods
- refactor: try to convert HTML modification code to use markdown hooks (see https://github.com/six-two/mkdocs-placeholder-plugin/issues/6#issuecomment-2062028205)
- inline placeholders:
    - documentation
    - option to enable / disable
    - show default, meaning, etc
